// Code generated by protoc-gen-go. DO NOT EDIT.
// source: merkledag.proto

package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// An IPFS MerkleDAG Link
type PBLink struct {
	// multihash of the target object
	Hash []byte `protobuf:"bytes,1,opt,name=Hash" json:"Hash,omitempty"`
	// utf string name. should be unique per object
	Name *string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	// cumulative size of target object
	Tsize                *uint64  `protobuf:"varint,3,opt,name=Tsize" json:"Tsize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PBLink) Reset()         { *m = PBLink{} }
func (m *PBLink) String() string { return proto.CompactTextString(m) }
func (*PBLink) ProtoMessage()    {}
func (*PBLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_merkledag_a6e8b43874a7e093, []int{0}
}
func (m *PBLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBLink.Unmarshal(m, b)
}
func (m *PBLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBLink.Marshal(b, m, deterministic)
}
func (dst *PBLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBLink.Merge(dst, src)
}
func (m *PBLink) XXX_Size() int {
	return xxx_messageInfo_PBLink.Size(m)
}
func (m *PBLink) XXX_DiscardUnknown() {
	xxx_messageInfo_PBLink.DiscardUnknown(m)
}

var xxx_messageInfo_PBLink proto.InternalMessageInfo

func (m *PBLink) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *PBLink) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *PBLink) GetTsize() uint64 {
	if m != nil && m.Tsize != nil {
		return *m.Tsize
	}
	return 0
}

// An IPFS MerkleDAG Node
type PBNode struct {
	// refs to other objects
	Links []*PBLink `protobuf:"bytes,2,rep,name=Links" json:"Links,omitempty"`
	// opaque user data
	Data                 []byte   `protobuf:"bytes,1,opt,name=Data" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PBNode) Reset()         { *m = PBNode{} }
func (m *PBNode) String() string { return proto.CompactTextString(m) }
func (*PBNode) ProtoMessage()    {}
func (*PBNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_merkledag_a6e8b43874a7e093, []int{1}
}
func (m *PBNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBNode.Unmarshal(m, b)
}
func (m *PBNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBNode.Marshal(b, m, deterministic)
}
func (dst *PBNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBNode.Merge(dst, src)
}
func (m *PBNode) XXX_Size() int {
	return xxx_messageInfo_PBNode.Size(m)
}
func (m *PBNode) XXX_DiscardUnknown() {
	xxx_messageInfo_PBNode.DiscardUnknown(m)
}

var xxx_messageInfo_PBNode proto.InternalMessageInfo

func (m *PBNode) GetLinks() []*PBLink {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *PBNode) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*PBLink)(nil), "main.PBLink")
	proto.RegisterType((*PBNode)(nil), "main.PBNode")
}

func init() { proto.RegisterFile("merkledag.proto", fileDescriptor_merkledag_a6e8b43874a7e093) }

var fileDescriptor_merkledag_a6e8b43874a7e093 = []byte{
	// 131 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcf, 0x4d, 0x2d, 0xca,
	0xce, 0x49, 0x4d, 0x49, 0x4c, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xc9, 0x4d, 0xcc,
	0xcc, 0x53, 0x32, 0xe6, 0x62, 0x0b, 0x70, 0xf2, 0xc9, 0xcc, 0xcb, 0x16, 0xe2, 0xe1, 0x62, 0xf1,
	0x48, 0x2c, 0xce, 0x90, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x01, 0xf1, 0xfc, 0x12, 0x73, 0x53, 0x25,
	0x98, 0x14, 0x18, 0x35, 0x38, 0x85, 0x78, 0xb9, 0x58, 0x43, 0x8a, 0x33, 0xab, 0x52, 0x25, 0x98,
	0x15, 0x18, 0x35, 0x58, 0x20, 0x9a, 0xfc, 0xf2, 0x53, 0x52, 0x85, 0xa4, 0xb9, 0x58, 0x41, 0x9a,
	0x8b, 0x25, 0x98, 0x14, 0x98, 0x35, 0xb8, 0x8d, 0x78, 0xf4, 0x40, 0x86, 0xea, 0x21, 0x4c, 0x74,
	0x49, 0x2c, 0x49, 0x84, 0x98, 0x08, 0x08, 0x00, 0x00, 0xff, 0xff, 0x44, 0x6e, 0x6d, 0xab, 0x81,
	0x00, 0x00, 0x00,
}
